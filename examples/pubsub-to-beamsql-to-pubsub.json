{
  "sources": [
    {
      "name": "pubsubInput",
      "module": "pubsub",
      "parameters": {
        "subscription": "projects/myproject/subscriptions/mysubscription",
        "format": "json"
      },
      "schema": {
        "fields": [
          { "name": "UserID", "type": "long", "mode": "nullable" },
          { "name": "Count", "type": "long", "mode": "nullable" }
        ]
      }
    }
  ],
  "transforms": [
    {
      "name": "withEventTime",
      "module": "eventtime",
      "inputs": [
        "pubsubInput"
      ],
      "parameters": {
        "eventtimeField": "EventTimestamp"
      }
    },
    {
      "name": "beamsqlTransform",
      "module": "beamsql",
      "inputs": [
        "withEventTime"
      ],
      "parameters": {
        "sql": "SELECT UserID, COUNT(UserID) AS Count, SUM(Count) AS SumCount, MIN(EventTimestamp) AS EarliestTime, MAX(EventTimestamp) AS LatestTime FROM withEventTime GROUP BY UserID, TUMBLE(EventTimestamp, 'INTERVAL 10 SECOND') HAVING SumCount > 1"
      }
    }
  ],
  "sinks": [
    {
      "name": "pubsubOutput",
      "module": "pubsub",
      "input": "beamsqlTransform",
      "parameters": {
        "topic": "projects/myproject/topics/mytopic",
        "format": "json"
      }
    }
  ]
}